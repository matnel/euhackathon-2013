<!DOCTYPE html>
<html>
  <head>
    <script src="./libs/jquery.js"></script>
    <script src="./libs/react.js"></script>
    <script src="./libs/JSXTransformer.js"></script>
    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
    <link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css">
    <script src="./libs/bootstrap/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="./libs/bootstrap/css/bootstrap.min.css">

    <link rel="stylesheet" href="./style.css">
  </head>
  <body>

    <div id="example" style="margin: 10px;"></div>
    <script type="text/jsx">
    /** @jsx React.DOM */
    var Slider = React.createClass( {

      getInitialState: function() {
        return {
          value : 0
        };
      },

      render : function() {
        var component = this;
        return(<div>
          <div id = "tulos">
            {this.state.value}
          </div>
          <div id = "slideri">
          </div>
          </div>
        )
      },

      onSlide : function(event, ui) {
        this.props.answer(ui.value);
        this.setState({value : ui.value});

      },

      componentDidMount: function() {
        $("#slideri").slider({
            max: this.props.max,
            min: this.props.min,
            value: this.props.min,
            slide: this.onSlide
        });
      }


    });

    var Choice = React.createClass( {

      getInitialState: function() {
        return {
          selected : ''
        };
      },

      onSelect : function(event) {
        this.props.answer( event );
        this.setState( { selected : event.target.value } );
      },

      render : function() {
        var component = this;

        var selectors = {
          display: this.props.answered ? 'none' : 'inline'
        };


        var numbers = {
          display: this.props.answered ? 'inline' : 'none'
        };  

        return(
          <div class="btn-group" data-toggle="buttons">
          {
            this.props.choices.map(function(c) {
              style = {
                'font-weight' : component.state.selected == c.name ? 'bold' : '',
                color : component.props.answered && c.correct ? 'green' : ''
              }
              return  (<label class="btn btn-primary">
                        <input name="choice" type="radio" value={c.name} onChange={component.onSelect}></input> {c.name}
                      </label>);
            })
          }
          </div>
        )
      }
    });

    var Question = React.createClass( {

      getInitialState: function() {
        return {
          answer: null
        };
      },

      go : function() {
        this.props.correct( this.props.q.correct == this.state.answer );
      },

      saveAnswer : function(event) {
        this.setState( {answer: event.target.value } );
      },

      render: function() {
        var s = {
          display: this.props.answered ? 'none' : 'inline'
        };
        var s2 = {
          display: this.props.answered ? 'inline' : 'none'
        }
          return (
          <div class="col-lg-6">
            <h1>{this.props.q.title}</h1>
            <Choice choices={this.props.q.choices} answer={this.saveAnswer} answered={this.props.answered} />
            <Slider max={30} min={2} answer={this.saveAnswer}/>
            <button class="btn btn-large btn-primary" onClick={this.go} style={s} >Ok, go</button>
            <button class="btn btn-large" onClick={this.props.next} style={s2}>Next</button>
          </div>
          );
      }
    });

     var Status = React.createClass( {
      render: function() {

        // purkka
        var imgs = [];
        for( var i = 0; i < this.props.normals; i++ ) {
          imgs.push('')
        }

        return (
          <div id="nurmikko">
            {
              imgs.map( function(){
                return(
                  <img class="s" src='./images/sieni8.png' />
                  );
              })

            }
            {
              this.props.labels.map( function(c){
                var src = './images/' + c;
                return(<img class="sieni" src={src} />);
              } )
            }
          </div>
        );
      }
    } );

    var Avatar = React.createClass( {
      render: function() {
        return (
          <div id="avatar" class="col-lg-6">
            <img src='./images/badger.png' />
            <button id='button' class="hide"></button>
          </div>
        );
      },

      componentDidUpdate: function() {
        console.log("update");
        $('#avatar').popover( { content : "Mushroom " + this.props.say } );
        $('#avatar').click();
      }
    });

    _q = {};
    _q.title = "Minne matka?";
    _q.type = "multichoice";
    _q.choices = [  { name : 'Ruotsiin', number : '20' , correct : false } , 
                    { name : 'Saksaan', number : '10' , correct : false } ,
                    { name : 'Brysseliin', number : '20' , correct : true }
                 ];
    _q.correct = 'Brysseliin';

    k = ['sieni1.png','sieni2.png', 'sieni3.png','sieni4.png', 'sieni5.png','sieni6.png', 'sieni7.png','sieni8.png', 'sieni9.png','sieni10.png'];


    var Main = React.createClass( {

      getInitialState: function() {
        return {
          say: '',
          correct : 0,
          all : 0,
          answered : false
        };
      },

      updateCorrect: function(correct) {
        console.log( "foo" );
        this.setState( { answered: true });
        this.state.all++;
        if( correct ) {
          this.state.correct++;
          this.setState( { correct : this.state.correct } );
        } else {
          if( this.state.correct > 0 ) {
            this.state.correct--;
            this.setState( { correct : this.state.correct, say : "It's a snake, it's a snake..."} );
          }
        }
      },

      next: function() {
        console.log("next");
        this.setState( { answered: false });
      },

      render: function() {
        return (
          <div>
            <div class="row">
              <Question q={_q} correct={this.updateCorrect} next={this.next} answered={this.state.answered} />
              <Avatar say={this.state.say} number={this.state.correct} />
            </div>
            <Status normals={this.state.correct} labels={k} />
          </div>
        );
      }

    } );

    React.renderComponent(
      <Main />,
      document.getElementById('example')
    );
    </script>
  </body>
</html>